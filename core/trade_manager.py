from telegram import Update
from telegram.ext import ContextTypes
from core.bybit_handler import BybitHandler
from config.settings import TELEGRAM_CHAT_ID

async def handle_buy_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args
    if not args:
        await update.message.reply_text("–£–∫–∞–∂–∏ –º–æ–Ω–µ—Ç—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: /buy BTCUSDT")
        return
    symbol = args[0].upper()
    await update.message.reply_text(f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É {symbol} –ø–æ–ª—É—á–µ–Ω (—Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º).")

async def handle_sell_order_recomendations_command(update: Update, context: ContextTypes.DEFAULT_TYPE, bb_handler: BybitHandler):
    chat_id = update.effective_chat.id
    if chat_id != TELEGRAM_CHAT_ID:
        return

    recommendations = bb_handler.get_sell_order_recomendations()

    if not recommendations:
        await update.message.reply_text("üîç –ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.")
        return

    message_lines = ["üìâ *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–¥–∞–∂–µ:*"]
    for symbol, price, qty in recommendations:
        message_lines.append(f"‚Ä¢ `{symbol}` ‚Äî –¶–µ–Ω–∞: *{price:.4f}*, –ö–æ–ª-–≤–æ: *{qty}*")

    message_text = "\n".join(message_lines)
    await update.message.reply_text(message_text, parse_mode='Markdown')

